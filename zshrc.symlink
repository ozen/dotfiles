export ZDOTDIR=${ZDOTDIR:-$HOME}
DOTFILES_ROOT=$ZDOTDIR/.dotfiles
ZSH=$DOTFILES_ROOT/oh-my-zsh
ZSH_CUSTOM=$DOTFILES_ROOT/oh-my-zsh-custom

ZSH_THEME="af-magic"
DISABLE_UPDATE_PROMPT=true
COMPLETION_WAITING_DOTS="true"

plugins=(debian ubuntu fedora systemd dnf
git github sublime
screen tmux supervisor sudo
pip python virtualenv fabric django
node npm bower
golang docker docker-compose
colored-man-pages
zsh-autosuggestions zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh
source $DOTFILES_ROOT/nginx.zsh

alias la='ls -lAh'
alias l='ls -lh'
alias c='clear'
alias reload!='. ~/.zshrc'
alias mmove="rsync -av"
alias wnvidia="watch -n 1 -d -t nvidia-smi"
alias devicequery="sudo /usr/local/cuda/samples/1_Utilities/deviceQuery/deviceQuery"
alias suz="noglob suz"
alias sv="sudo supervisorctl"
alias matlabc="matlab -nojvm -nodisplay -nosplash"
alias ndr="noglob ndr"
alias ytail="tail -f -n 1000"
alias yps="ps axf -o pid,ppid,user,etime,bsdtime,args"
alias ytop="top -c -d 1"

function ndr {
    docker run --runtime=nvidia -it --rm \
    --volume="/home/$USER:/home/$USER" \
    --volume=/etc/group:/etc/group:ro \
    --volume=/etc/passwd:/etc/passwd:ro \
    --volume=/etc/shadow:/etc/shadow:ro \
    --volume=/etc/sudoers:/etc/sudoers:ro \
    --volume=/etc/sudoers.d:/etc/sudoers.d:ro \
    --volume=/tmp/.X11-unix:/tmp/.X11-unix:rw \
    --user=$(id -u) \
    --env="DISPLAY" \
    --workdir="/home/$USER" \
    $@
}

function activate {
    VENV=${1:-venv}
    source $VENV/bin/activate
}

function ytopp {
    ytopp_args="-c -d 1"
    for pid in `pgrep -f $1`; do
        ytopp_args="$ytopp_args -p $pid"
    done
    top $(echo $ytopp_args | xargs)
}

function sok {
    ssh -D 1080 -A -f -C -q -N $1
}

function sshl {
    ssh -L $1':localhost:'$1 -A -f -C -q -N $2
}

function sshr {
    ssh -R $1':localhost:'$1 -A -f -C -q -N $2
}

function killsok {
    pkill -f "ssh -D 1080"
}

function suz {
    sudo -u $1 HOME=$(echo ~$1) ZDOTDIR=$ZDOTDIR PATH=$PATH LD_LIBRARY_PATH=$LD_LIBRARY_PATH zsh
}

function set-proxy {
    export all_proxy=socks5://127.0.0.1:1080
    export http_proxy=http://127.0.0.1:8035
    export https_proxy=$http_proxy
    export ftp_proxy=$http_proxy
    export dns_proxy=$http_proxy
    export rsync_proxy=$http_proxy
    export no_proxy="localhost,127.0.0.1"
    export use_proxy=on
}

function unset-proxy {
    export use_proxy=off
}

function priv2pub {
    ssh-keygen -y -f $1 > $1.pub
}

function xe {
    if ! [ -z "$1" ] && ! [ -z "$2" ] && ! [ -z "$3" ]; then
        uri="http://www.xe.com/currencyconverter/convert/?Amount=$1&From=$2&To=$3"
        value=`curl -s --connect-timeout 60 --max-time 60 $uri | perl -l -0777 -ne 'print $3 if /<span class=(.*?)uccResultAmount(.*?)>\s*(.*?)\s*<\/span>/si'`
        echo $value
    fi
}

function exch {
    if ! [ -z "$1" ] && ! [ -z "$2" ] && ! [ -z "$3" ]; then
        uri="https://finance.google.com/finance/converter?a=$1&from=$2&to=$3"
        value=`curl -s --connect-timeout 60 --max-time 60 $uri | perl -l -0777 -ne 'print $1 if /<div id=currency_converter_result>.*<span class=bld>(\d+\.\d+).*<\/span>/si'`
        echo $value
    fi
}

function cmc {
    $DOTFILES_ROOT/cmc.py "$@"
}

function randomize {
    for inp in "$@"; do
        if [ -f "$inp" ]; then
            file_name=$(basename "$inp")
            dir_name=$(dirname "$inp")
            extension="${file_name##*.}"
            file_name="${file_name%.*}"
            if [ $file_name = $extension ]; then
                extension=""
            else
                extension=.$extension
            fi
            new_name=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)
            mv $inp $dir_name/$new_name$extension
        fi
    done
}
